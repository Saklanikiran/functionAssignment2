{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "61ca559d-31aa-43fa-8735-7a23eeb8e1ab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('Virat Kohli', 24936)\n",
      "('Jack Kallis', 25534)\n",
      "('Ricky Ponting', 27483)\n",
      "('Sachin Tendulkar', 34357)\n"
     ]
    }
   ],
   "source": [
    "# Ans : 1\n",
    "data = [('Sachin Tendulkar', 34357), ('Ricky Ponting', 27483), ('Jack Kallis', 25534), ('Virat Kohli', 24936)]\n",
    "\n",
    "sorted_data = sorted(data, key=lambda x: x[1])\n",
    "\n",
    "for item in sorted_data:\n",
    "    print(item)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a2bb7962-4c76-41d0-9d42-3dad8b9eec4e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n"
     ]
    }
   ],
   "source": [
    "# Ans : 2\n",
    "list1=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
    "list2=map(lambda x:x**2,list1)\n",
    "print(list(list2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5457c231-aacb-42f3-9a67-0f0e4bd40504",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')\n"
     ]
    }
   ],
   "source": [
    "# Ans : 3\n",
    "number=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
    "store_tuple=tuple(map(lambda x:str(x),number))\n",
    "print(store_tuple)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "222cca87-5225-46c4-b15b-dc9c288ddfcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15511210043330985984000000\n"
     ]
    }
   ],
   "source": [
    "# Ans : 4\n",
    "from functools import reduce\n",
    "list1=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]\n",
    "multi=reduce(lambda x,y:x*y,list1)\n",
    "print(int(multi))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "83532681-eeec-4103-bf40-3cdb963b2761",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[6, 60, 90, 120]\n"
     ]
    }
   ],
   "source": [
    "# Ans : 5\n",
    "def division(number):\n",
    "    return number%2==0 and number%3==0\n",
    "number=[2, 3, 6, 9, 27, 60, 90, 120, 55, 46]\n",
    "list1=list(filter(division,number))\n",
    "print(list1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1c1a588d-99f9-4eff-b0e8-55bab667c172",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Ans : 6\n",
    "is_palindrome=lambda s : s==s[::-1]\n",
    "palin=list(filter\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
